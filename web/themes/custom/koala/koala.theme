<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\StringTranslation\TranslatableMarkup;



/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function koala_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
    'bg-primary' => new TranslatableMarkup('Primary'),
    'bg-secondary' => new TranslatableMarkup('Secondary'),
    'bg-light' => new TranslatableMarkup('Light'),
    'bg-dark' => new TranslatableMarkup('Dark'),
    'bg-white' => new TranslatableMarkup('White'),
    'bg-transparent' => new TranslatableMarkup('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
    'bg-primary' => new TranslatableMarkup('Primary'),
    'bg-secondary' => new TranslatableMarkup('Secondary'),
    'bg-light' => new TranslatableMarkup('Light'),
    'bg-dark' => new TranslatableMarkup('Dark'),
    'bg-white' => new TranslatableMarkup('White'),
    'bg-transparent' => new TranslatableMarkup('Transparent'),
  );
}
/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views template suggestions.
 *
 * @inheritdoc
 */
function koala_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view__' . $variables['view']->id();
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views unformatted template suggestions.
 *
 * @inheritdoc
 */
function koala_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view_unformatted__' . $variables['view']->id();
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views field template suggestions.
 *
 * @inheritdoc
 */
function koala_theme_suggestions_views_view_field_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view_field__' . $variables['view']->id();
  // suggestion for field in view
  $suggestions[] = 'views_view_field__' . $variables['view']->id() . '__' . $variables['field']->field;
}

function koala_theme_suggestions_page_alter(&$suggestions, $variables) {
  //Get current node
  $node = \Drupal::request()->attributes->get('node');

  if ($node) {
    //Node type project && page template
    if ($node->getType()) {
      $suggestions[] = 'page__' . 'node__type' . '_' . $node->getType();
    }
  }
}

/**
 * Implements hook_theme_suggestions_views_view_fields_alter().
 */
function koala_theme_suggestions_views_view_fields_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view_fields__' . $variables['view']->id();
}

function koala_theme_suggestions_alter(array &$suggestions, array &$variables, $hook) {

  if ($hook == 'form' & !empty($variables['element']['#id'])) {
    $suggestions[] = 'form__' . str_replace('-', '_', $variables['element']['#id']);
  }
  $variables['pablo'] = 'ESTO ES UNA VARIABLE GLOBAL';
  //Guardar el rol o los roles del usuario en una variable
  $roles = \Drupal::currentUser()->getRoles();
  //Si el usuario tiene el rol de administrador
  if (in_array('administrator', $roles)) {
    //Añadir la clase admin a la variable de sugerencia
    $variables['attributes']['class'][] = 'admin';
  } else {
    //Añadir la clase no-admin a la variable de sugerencia
    $variables['attributes']['class'][] = 'no-admin';
  } 


  if ($hook == 'node_edit_form') {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      $content_type = $node->bundle();
    } else {
      $current_path = \Drupal::service('path.current')->getPath();
      $path_args = explode('/', $current_path);
      $content_type = $path_args[3];
    }
    $suggestions[] = 'node_edit_form__' . $content_type;
  }
}


/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function koala_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#theme']) && is_array($variables['element']['#theme'])) {
    foreach ($variables['element']['#theme'] as $theme) {
      if (strpos($theme, '_edit_') !== FALSE) {
        $suggestions[] = 'form__' . str_replace('_edit_', '_', $theme);
      }
      $suggestions[] = 'form__' . $theme;
    }
  }
}

function koala_theme_suggestions_user(&$suggestions, $variables, $hook) {

  // Define the view mode.
  $mode = $variables['elements']['#view_mode'];
  // Create a theme hook suggestion which has the view mode name in it.
  $suggestions[] = 'user__' . $mode;

}

//Generar una lista de horarios en texto Y POR LINEA, por ejemplo: 01|06:00am, 02|06:30am, 03|07:00am


function koala_generate_hours($start, $end, $interval = 30, $format = '12') {
  $start = new DateTime($start);
  $end = new DateTime($end);
  $start->modify('-30 minutes');
  $interval = new DateInterval('PT' . $interval . 'M');
  $periods = new DatePeriod($start, $interval, $end);
  $hours = array();
  foreach ($periods as $period) {
    $hours[$period->format('H:i')] = $period->format($format == '12' ? 'h:ia' : 'H:i');
  }
  return $hours;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for node_edit_form.
 */
function koala_theme_suggestions_node_edit_form_alter(array &$suggestions, array $variables) {
  $route_match = \Drupal::routeMatch();

  if ($node = $route_match->getParameter('node')) {
    // When editing an existing node, add the node's bundle as the theme hook
    // suggestion.
    $suggestions[] = $variables['theme_hook_original'] . '__' . $node->bundle();
  }
  elseif ($node_type = $route_match->getParameter('node_type')) {
    // When a new node is created, the node type (object) is provided.
    $suggestions[] = $variables['theme_hook_original'] . '__' . $node_type->id();
  }

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 *
 * Add views field template suggestions.
 * 
 * @inheritdoc
 */
function koala_theme_suggestions_views_view_field(array $variables) {
  return [
    'views_view_field__' . $variables['field']->field
  ];
}

