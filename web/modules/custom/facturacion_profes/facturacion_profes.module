<?php
/**
 * @file
 * Implementación del hook_form_alter().
 */

 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_form_alter().
 */
function facturacion_profes_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $current_path = \Drupal::request()->getRequestUri();
  $current_path = explode('/', $current_path);
  $current_path = end($current_path);  
  
  if ($form_id == 'node_facturacion_profesor_edit_form' || $form_id == 'node_facturacion_profesor_form') {
    $form['actions']['submit']['#value'] =  Drupal::translation()->translate('Enviar factura');

    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = 'callback_submit_facturacion_profes_facturacion_profesor_submit';
      }
    }
  }

  if ($current_path == 'facturacion') {
    // $form['#attached']['library'][] = 'facturacion_profes/facturacion_profes_js';
    // $form['#attached']['library'][] = 'facturacion_profes/facturacion_profes_css';
    // Verifica que sea el formulario de la vista específica
    if ($form_id == 'views_exposed_form') {    
      // Agrega una biblioteca JavaScript personalizada para tus funciones
      $form['#attached']['library'][] = 'facturacion_profes/facturacion_profes_js';
  
      // Agrega atributos personalizados a los filtros para acceder a ellos con JavaScript
      $form['field_fecha_cita_oculta']['#attributes']['class'][] = 'mi-filtro-js';
      
      // Agrega eventos JavaScript a los filtros con una devolución de llamada Ajax después de que se realice el filtrado
      $form['field_fecha_cita_oculta']['#ajax'] = [
        'callback' => 'facturacion_profes_ajax_callback',
        'event' => 'change',
        'wrapper' => 'vistas-contenido',
        'after' => 'facturacion_profes_ajax_after_callback',
      ];
    }    
  }
}

function callback_submit_facturacion_profes_facturacion_profesor_submit(&$form, FormStateInterface $form_state) {
  $response = new RedirectResponse('/profesor');
  $response->send();
}
/**
 * Ajax callback to perform additional actions after filtering.
 */
function facturacion_profes_ajax_after_callback(array &$form, FormStateInterface $form_state) {
  // Realiza acciones adicionales después de que se haya realizado el filtrado Ajax.
}